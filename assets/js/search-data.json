{
  
    
        "post0": {
            "title": "Title",
            "content": "&#39;KAGGLE ML &amp; DS SURVEY ANALYSIS&#39; . This is my analysis that i carried out on kaggle survey dataset. Here i tried to create insights from the provided dataset. . import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns pd.set_option(&#39;display.max_rows&#39;, 500) pd.set_option(&#39;display.max_columns&#39;, 500) . Reading the data . df = pd.read_csv(&quot;kaggle_survey_2020_responses.csv&quot;) . /usr/lib/python3/dist-packages/IPython/core/interactiveshell.py:3062: DtypeWarning: Columns (0) have mixed types.Specify dtype option on import or set low_memory=False. has_raised = await self.run_ast_nodes(code_ast.body, cell_name, . df.head() . Time from Start to Finish (seconds) Q1 Q2 Q3 Q4 Q5 Q6 Q7_Part_1 Q7_Part_2 Q7_Part_3 Q7_Part_4 Q7_Part_5 Q7_Part_6 Q7_Part_7 Q7_Part_8 Q7_Part_9 Q7_Part_10 Q7_Part_11 Q7_Part_12 Q7_OTHER Q8 Q9_Part_1 Q9_Part_2 Q9_Part_3 Q9_Part_4 Q9_Part_5 Q9_Part_6 Q9_Part_7 Q9_Part_8 Q9_Part_9 Q9_Part_10 Q9_Part_11 Q9_OTHER Q10_Part_1 Q10_Part_2 Q10_Part_3 Q10_Part_4 Q10_Part_5 Q10_Part_6 Q10_Part_7 Q10_Part_8 Q10_Part_9 Q10_Part_10 Q10_Part_11 Q10_Part_12 Q10_Part_13 Q10_OTHER Q11 Q12_Part_1 Q12_Part_2 Q12_Part_3 Q12_OTHER Q13 Q14_Part_1 Q14_Part_2 Q14_Part_3 Q14_Part_4 Q14_Part_5 Q14_Part_6 Q14_Part_7 Q14_Part_8 Q14_Part_9 Q14_Part_10 Q14_Part_11 Q14_OTHER Q15 Q16_Part_1 Q16_Part_2 Q16_Part_3 Q16_Part_4 Q16_Part_5 Q16_Part_6 Q16_Part_7 Q16_Part_8 Q16_Part_9 Q16_Part_10 Q16_Part_11 Q16_Part_12 Q16_Part_13 Q16_Part_14 Q16_Part_15 Q16_OTHER Q17_Part_1 Q17_Part_2 Q17_Part_3 Q17_Part_4 Q17_Part_5 Q17_Part_6 Q17_Part_7 Q17_Part_8 Q17_Part_9 Q17_Part_10 Q17_Part_11 Q17_OTHER Q18_Part_1 Q18_Part_2 Q18_Part_3 Q18_Part_4 Q18_Part_5 Q18_Part_6 Q18_OTHER Q19_Part_1 Q19_Part_2 Q19_Part_3 Q19_Part_4 Q19_Part_5 Q19_OTHER Q20 Q21 Q22 Q23_Part_1 Q23_Part_2 Q23_Part_3 Q23_Part_4 Q23_Part_5 Q23_Part_6 Q23_Part_7 Q23_OTHER Q24 Q25 Q26_A_Part_1 Q26_A_Part_2 Q26_A_Part_3 Q26_A_Part_4 Q26_A_Part_5 Q26_A_Part_6 Q26_A_Part_7 Q26_A_Part_8 Q26_A_Part_9 Q26_A_Part_10 Q26_A_Part_11 Q26_A_OTHER Q27_A_Part_1 Q27_A_Part_2 Q27_A_Part_3 Q27_A_Part_4 Q27_A_Part_5 Q27_A_Part_6 Q27_A_Part_7 Q27_A_Part_8 Q27_A_Part_9 Q27_A_Part_10 Q27_A_Part_11 Q27_A_OTHER Q28_A_Part_1 Q28_A_Part_2 Q28_A_Part_3 Q28_A_Part_4 Q28_A_Part_5 Q28_A_Part_6 Q28_A_Part_7 Q28_A_Part_8 Q28_A_Part_9 Q28_A_Part_10 Q28_A_OTHER Q29_A_Part_1 Q29_A_Part_2 Q29_A_Part_3 Q29_A_Part_4 Q29_A_Part_5 Q29_A_Part_6 Q29_A_Part_7 Q29_A_Part_8 Q29_A_Part_9 Q29_A_Part_10 Q29_A_Part_11 Q29_A_Part_12 Q29_A_Part_13 Q29_A_Part_14 Q29_A_Part_15 Q29_A_Part_16 Q29_A_Part_17 Q29_A_OTHER Q30 Q31_A_Part_1 Q31_A_Part_2 Q31_A_Part_3 Q31_A_Part_4 Q31_A_Part_5 Q31_A_Part_6 Q31_A_Part_7 Q31_A_Part_8 Q31_A_Part_9 Q31_A_Part_10 Q31_A_Part_11 Q31_A_Part_12 Q31_A_Part_13 Q31_A_Part_14 Q31_A_OTHER Q32 Q33_A_Part_1 Q33_A_Part_2 Q33_A_Part_3 Q33_A_Part_4 Q33_A_Part_5 Q33_A_Part_6 Q33_A_Part_7 Q33_A_OTHER Q34_A_Part_1 Q34_A_Part_2 Q34_A_Part_3 Q34_A_Part_4 Q34_A_Part_5 Q34_A_Part_6 Q34_A_Part_7 Q34_A_Part_8 Q34_A_Part_9 Q34_A_Part_10 Q34_A_Part_11 Q34_A_OTHER Q35_A_Part_1 Q35_A_Part_2 Q35_A_Part_3 Q35_A_Part_4 Q35_A_Part_5 Q35_A_Part_6 Q35_A_Part_7 Q35_A_Part_8 Q35_A_Part_9 Q35_A_Part_10 Q35_A_OTHER Q36_Part_1 Q36_Part_2 Q36_Part_3 Q36_Part_4 Q36_Part_5 Q36_Part_6 Q36_Part_7 Q36_Part_8 Q36_Part_9 Q36_OTHER Q37_Part_1 Q37_Part_2 Q37_Part_3 Q37_Part_4 Q37_Part_5 Q37_Part_6 Q37_Part_7 Q37_Part_8 Q37_Part_9 Q37_Part_10 Q37_Part_11 Q37_OTHER Q38 Q39_Part_1 Q39_Part_2 Q39_Part_3 Q39_Part_4 Q39_Part_5 Q39_Part_6 Q39_Part_7 Q39_Part_8 Q39_Part_9 Q39_Part_10 Q39_Part_11 Q39_OTHER Q26_B_Part_1 Q26_B_Part_2 Q26_B_Part_3 Q26_B_Part_4 Q26_B_Part_5 Q26_B_Part_6 Q26_B_Part_7 Q26_B_Part_8 Q26_B_Part_9 Q26_B_Part_10 Q26_B_Part_11 Q26_B_OTHER Q27_B_Part_1 Q27_B_Part_2 Q27_B_Part_3 Q27_B_Part_4 Q27_B_Part_5 Q27_B_Part_6 Q27_B_Part_7 Q27_B_Part_8 Q27_B_Part_9 Q27_B_Part_10 Q27_B_Part_11 Q27_B_OTHER Q28_B_Part_1 Q28_B_Part_2 Q28_B_Part_3 Q28_B_Part_4 Q28_B_Part_5 Q28_B_Part_6 Q28_B_Part_7 Q28_B_Part_8 Q28_B_Part_9 Q28_B_Part_10 Q28_B_OTHER Q29_B_Part_1 Q29_B_Part_2 Q29_B_Part_3 Q29_B_Part_4 Q29_B_Part_5 Q29_B_Part_6 Q29_B_Part_7 Q29_B_Part_8 Q29_B_Part_9 Q29_B_Part_10 Q29_B_Part_11 Q29_B_Part_12 Q29_B_Part_13 Q29_B_Part_14 Q29_B_Part_15 Q29_B_Part_16 Q29_B_Part_17 Q29_B_OTHER Q31_B_Part_1 Q31_B_Part_2 Q31_B_Part_3 Q31_B_Part_4 Q31_B_Part_5 Q31_B_Part_6 Q31_B_Part_7 Q31_B_Part_8 Q31_B_Part_9 Q31_B_Part_10 Q31_B_Part_11 Q31_B_Part_12 Q31_B_Part_13 Q31_B_Part_14 Q31_B_OTHER Q33_B_Part_1 Q33_B_Part_2 Q33_B_Part_3 Q33_B_Part_4 Q33_B_Part_5 Q33_B_Part_6 Q33_B_Part_7 Q33_B_OTHER Q34_B_Part_1 Q34_B_Part_2 Q34_B_Part_3 Q34_B_Part_4 Q34_B_Part_5 Q34_B_Part_6 Q34_B_Part_7 Q34_B_Part_8 Q34_B_Part_9 Q34_B_Part_10 Q34_B_Part_11 Q34_B_OTHER Q35_B_Part_1 Q35_B_Part_2 Q35_B_Part_3 Q35_B_Part_4 Q35_B_Part_5 Q35_B_Part_6 Q35_B_Part_7 Q35_B_Part_8 Q35_B_Part_9 Q35_B_Part_10 Q35_B_OTHER . 0 Duration (in seconds) | What is your age (# years)? | What is your gender? - Selected Choice | In which country do you currently reside? | What is the highest level of formal education ... | Select the title most similar to your current ... | For how many years have you been writing code ... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming languages do you use on a reg... | What programming language would you recommend ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following integrated development ... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | Which of the following hosted notebook product... | What type of computing platform do you use mos... | Which types of specialized hardware do you use... | Which types of specialized hardware do you use... | Which types of specialized hardware do you use... | Which types of specialized hardware do you use... | Approximately how many times have you used a T... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | What data visualization libraries or tools do ... | For how many years have you used machine learn... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following machine learning framew... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which of the following ML algorithms do you us... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which categories of computer vision methods do... | Which of the following natural language proces... | Which of the following natural language proces... | Which of the following natural language proces... | Which of the following natural language proces... | Which of the following natural language proces... | Which of the following natural language proces... | What is the size of the company where you are ... | Approximately how many individuals are respons... | Does your current employer incorporate machine... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | Select any activities that make up an importan... | What is your current yearly compensation (appr... | Approximately how much money have you (or your... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following cloud computin... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Do you use any of the following machine learni... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Do you use any automated machine learning tool... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Which of the following automated machine learn... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Do you use any tools to help manage machine le... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | Where do you publicly share or deploy your dat... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | On which platforms have you begun or completed... | What is the primary tool that you use at work ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Who/what are your favorite media sources that ... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | Which of the following cloud computing platfor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following big data products (rela... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which of the following business intelligence t... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which categories of automated machine learning... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | Which specific automated machine learning tool... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | In the next 2 years, do you hope to become mor... | . 1 1838 | 35-39 | Man | Colombia | Doctoral degree | Student | 5-10 years | Python | R | SQL | C | NaN | NaN | Javascript | NaN | NaN | NaN | MATLAB | NaN | Other | Python | Jupyter (JupyterLab, Jupyter Notebooks, etc) | NaN | NaN | Visual Studio Code (VSCode) | NaN | Spyder | NaN | NaN | NaN | NaN | NaN | NaN | Kaggle Notebooks | Colab Notebooks | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | A cloud computing platform (AWS, Azure, GCP, h... | GPUs | NaN | NaN | NaN | 2-5 times | Matplotlib | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Geoplotlib | NaN | NaN | NaN | 1-2 years | NaN | TensorFlow | Keras | NaN | NaN | NaN | Xgboost | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Decision Trees or Random Forests | Gradient Boosting Machines (xgboost, lightgbm,... | Bayesian Approaches | NaN | Dense Neural Networks (MLPs, etc) | Convolutional Neural Networks | NaN | Recurrent Neural Networks | NaN | NaN | NaN | NaN | NaN | NaN | Image classification and other general purpose... | NaN | NaN | NaN | Word embeddings/vectors (GLoVe, fastText, word... | NaN | Contextualized embeddings (ELMo, CoVe) | Transformer language models (GPT-3, BERT, XLne... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | NaN | Kaggle Learn Courses | NaN | NaN | NaN | NaN | NaN | NaN | University Courses (resulting in a university ... | NaN | NaN | Basic statistical software (Microsoft Excel, G... | NaN | NaN | NaN | Kaggle (notebooks, forums, etc) | NaN | NaN | NaN | NaN | Journal Publications (peer-reviewed journals, ... | NaN | NaN | NaN | Amazon Web Services (AWS) | Microsoft Azure | Google Cloud Platform (GCP) | IBM Cloud / Red Hat | NaN | SAP Cloud | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Azure Cloud Services | Microsoft Azure Container Instances | Azure Functions | Google Cloud Compute Engine | Google Cloud Functions | Google Cloud Run | Google Cloud App Engine | NaN | NaN | Amazon SageMaker | Amazon Forecast | Amazon Rekognition | Azure Machine Learning Studio | Azure Cognitive Services | Google Cloud AI Platform / Google Cloud ML En... | Google Cloud Video AI | Google Cloud Natural Language | Google Cloud Vision AI | NaN | NaN | NaN | NaN | NaN | NaN | MongoDB | NaN | NaN | Microsoft SQL Server | NaN | NaN | NaN | NaN | NaN | Google Cloud BigQuery | Google Cloud SQL | Google Cloud Firestore | NaN | NaN | Microsoft Power BI | Amazon QuickSight | Google Data Studio | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | SAP Analytics Cloud | NaN | NaN | Automated data augmentation (e.g. imgaug, albu... | NaN | NaN | NaN | Automated hyperparameter tuning (e.g. hyperopt... | Automation of full ML pipelines (e.g. Google C... | NaN | NaN | Google Cloud AutoML | NaN | Databricks AutoML | NaN | NaN | Auto-Keras | Auto-Sklearn | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | TensorBoard | NaN | NaN | NaN | NaN | NaN | NaN | . 2 289287 | 30-34 | Man | United States of America | Master’s degree | Data Engineer | 5-10 years | Python | R | SQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Python | NaN | NaN | Visual Studio | NaN | PyCharm | NaN | NaN | Sublime Text | NaN | NaN | NaN | NaN | NaN | Colab Notebooks | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | A personal computer or laptop | GPUs | NaN | NaN | NaN | 2-5 times | Matplotlib | Seaborn | NaN | Ggplot / ggplot2 | Shiny | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 1-2 years | Scikit-learn | TensorFlow | Keras | PyTorch | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Linear or Logistic Regression | NaN | NaN | NaN | NaN | NaN | Convolutional Neural Networks | NaN | NaN | Transformer Networks (BERT, gpt-3, etc) | NaN | NaN | NaN | Image segmentation methods (U-Net, Mask R-CNN,... | NaN | Image classification and other general purpose... | NaN | NaN | NaN | NaN | NaN | Contextualized embeddings (ELMo, CoVe) | Transformer language models (GPT-3, BERT, XLne... | NaN | NaN | 10,000 or more employees | 20+ | We have well established ML methods (i.e., mod... | Analyze and understand data to influence produ... | NaN | NaN | NaN | NaN | Do research that advances the state of the art... | NaN | NaN | 100,000-124,999 | $100,000 or more ($USD) | Amazon Web Services (AWS) | Microsoft Azure | Google Cloud Platform (GCP) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon EC2 | AWS Lambda | NaN | NaN | NaN | Azure Functions | Google Cloud Compute Engine | NaN | NaN | NaN | NaN | NaN | Amazon SageMaker | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | PostgresSQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon Redshift | Amazon Athena | NaN | NaN | NaN | NaN | NaN | NaN | PostgresSQL | Amazon QuickSight | Microsoft Power BI | NaN | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Microsoft Power BI | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | GitHub | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | NaN | NaN | DataCamp | NaN | NaN | Udemy | NaN | NaN | NaN | NaN | NaN | Business intelligence software (Salesforce, Ta... | Twitter (data science influencers) | NaN | Reddit (r/machinelearning, etc) | Kaggle (notebooks, forums, etc) | Course Forums (forums.fast.ai, Coursera forums... | YouTube (Kaggle YouTube, Cloud AI Adventures, ... | NaN | Blogs (Towards Data Science, Analytics Vidhya,... | NaN | Slack Communities (ods.ai, kagglenoobs, etc) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 3 860 | 35-39 | Man | Argentina | Bachelor’s degree | Software Engineer | 10-20 years | NaN | NaN | NaN | NaN | NaN | Java | Javascript | NaN | NaN | Bash | NaN | NaN | NaN | R | NaN | NaN | NaN | Visual Studio Code (VSCode) | NaN | NaN | Notepad++ | Sublime Text | Vim / Emacs | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | A personal computer or laptop | NaN | NaN | None | NaN | Never | NaN | NaN | NaN | NaN | NaN | D3 js | NaN | NaN | NaN | NaN | NaN | NaN | I do not use machine learning methods | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 1000-9,999 employees | 0 | No (we do not use ML methods) | NaN | NaN | NaN | NaN | NaN | NaN | None of these activities are an important part... | NaN | 15,000-19,999 | $0 ($USD) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | edX | NaN | NaN | NaN | Udacity | Udemy | NaN | NaN | NaN | NaN | NaN | Basic statistical software (Microsoft Excel, G... | NaN | Email newsletters (Data Elixir, O&#39;Reilly Data ... | NaN | Kaggle (notebooks, forums, etc) | NaN | YouTube (Kaggle YouTube, Cloud AI Adventures, ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | Microsoft SQL Server | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | . 4 507 | 30-34 | Man | United States of America | Master’s degree | Data Scientist | 5-10 years | Python | NaN | SQL | NaN | NaN | NaN | NaN | NaN | NaN | Bash | NaN | NaN | NaN | Python | NaN | NaN | NaN | NaN | PyCharm | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | A cloud computing platform (AWS, Azure, GCP, h... | NaN | NaN | None | NaN | 2-5 times | Matplotlib | Seaborn | Plotly / Plotly Express | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 3-4 years | Scikit-learn | TensorFlow | Keras | NaN | NaN | NaN | Xgboost | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Linear or Logistic Regression | Decision Trees or Random Forests | Gradient Boosting Machines (xgboost, lightgbm,... | Bayesian Approaches | NaN | Dense Neural Networks (MLPs, etc) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 250-999 employees | 5-9 | We have well established ML methods (i.e., mod... | Analyze and understand data to influence produ... | NaN | NaN | Build and/or run a machine learning service th... | Experimentation and iteration to improve exist... | NaN | NaN | NaN | 125,000-149,999 | $10,000-$99,999 | Amazon Web Services (AWS) | NaN | NaN | NaN | NaN | NaN | Salesforce Cloud | NaN | NaN | NaN | NaN | NaN | Amazon EC2 | AWS Lambda | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon Redshift | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | I do not share my work publicly | NaN | Coursera | NaN | NaN | DataCamp | NaN | NaN | NaN | LinkedIn Learning | NaN | University Courses (resulting in a university ... | NaN | NaN | Local development environments (RStudio, Jupyt... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . df = df.iloc[1:,] . df.head() . Time from Start to Finish (seconds) Q1 Q2 Q3 Q4 Q5 Q6 Q7_Part_1 Q7_Part_2 Q7_Part_3 Q7_Part_4 Q7_Part_5 Q7_Part_6 Q7_Part_7 Q7_Part_8 Q7_Part_9 Q7_Part_10 Q7_Part_11 Q7_Part_12 Q7_OTHER Q8 Q9_Part_1 Q9_Part_2 Q9_Part_3 Q9_Part_4 Q9_Part_5 Q9_Part_6 Q9_Part_7 Q9_Part_8 Q9_Part_9 Q9_Part_10 Q9_Part_11 Q9_OTHER Q10_Part_1 Q10_Part_2 Q10_Part_3 Q10_Part_4 Q10_Part_5 Q10_Part_6 Q10_Part_7 Q10_Part_8 Q10_Part_9 Q10_Part_10 Q10_Part_11 Q10_Part_12 Q10_Part_13 Q10_OTHER Q11 Q12_Part_1 Q12_Part_2 Q12_Part_3 Q12_OTHER Q13 Q14_Part_1 Q14_Part_2 Q14_Part_3 Q14_Part_4 Q14_Part_5 Q14_Part_6 Q14_Part_7 Q14_Part_8 Q14_Part_9 Q14_Part_10 Q14_Part_11 Q14_OTHER Q15 Q16_Part_1 Q16_Part_2 Q16_Part_3 Q16_Part_4 Q16_Part_5 Q16_Part_6 Q16_Part_7 Q16_Part_8 Q16_Part_9 Q16_Part_10 Q16_Part_11 Q16_Part_12 Q16_Part_13 Q16_Part_14 Q16_Part_15 Q16_OTHER Q17_Part_1 Q17_Part_2 Q17_Part_3 Q17_Part_4 Q17_Part_5 Q17_Part_6 Q17_Part_7 Q17_Part_8 Q17_Part_9 Q17_Part_10 Q17_Part_11 Q17_OTHER Q18_Part_1 Q18_Part_2 Q18_Part_3 Q18_Part_4 Q18_Part_5 Q18_Part_6 Q18_OTHER Q19_Part_1 Q19_Part_2 Q19_Part_3 Q19_Part_4 Q19_Part_5 Q19_OTHER Q20 Q21 Q22 Q23_Part_1 Q23_Part_2 Q23_Part_3 Q23_Part_4 Q23_Part_5 Q23_Part_6 Q23_Part_7 Q23_OTHER Q24 Q25 Q26_A_Part_1 Q26_A_Part_2 Q26_A_Part_3 Q26_A_Part_4 Q26_A_Part_5 Q26_A_Part_6 Q26_A_Part_7 Q26_A_Part_8 Q26_A_Part_9 Q26_A_Part_10 Q26_A_Part_11 Q26_A_OTHER Q27_A_Part_1 Q27_A_Part_2 Q27_A_Part_3 Q27_A_Part_4 Q27_A_Part_5 Q27_A_Part_6 Q27_A_Part_7 Q27_A_Part_8 Q27_A_Part_9 Q27_A_Part_10 Q27_A_Part_11 Q27_A_OTHER Q28_A_Part_1 Q28_A_Part_2 Q28_A_Part_3 Q28_A_Part_4 Q28_A_Part_5 Q28_A_Part_6 Q28_A_Part_7 Q28_A_Part_8 Q28_A_Part_9 Q28_A_Part_10 Q28_A_OTHER Q29_A_Part_1 Q29_A_Part_2 Q29_A_Part_3 Q29_A_Part_4 Q29_A_Part_5 Q29_A_Part_6 Q29_A_Part_7 Q29_A_Part_8 Q29_A_Part_9 Q29_A_Part_10 Q29_A_Part_11 Q29_A_Part_12 Q29_A_Part_13 Q29_A_Part_14 Q29_A_Part_15 Q29_A_Part_16 Q29_A_Part_17 Q29_A_OTHER Q30 Q31_A_Part_1 Q31_A_Part_2 Q31_A_Part_3 Q31_A_Part_4 Q31_A_Part_5 Q31_A_Part_6 Q31_A_Part_7 Q31_A_Part_8 Q31_A_Part_9 Q31_A_Part_10 Q31_A_Part_11 Q31_A_Part_12 Q31_A_Part_13 Q31_A_Part_14 Q31_A_OTHER Q32 Q33_A_Part_1 Q33_A_Part_2 Q33_A_Part_3 Q33_A_Part_4 Q33_A_Part_5 Q33_A_Part_6 Q33_A_Part_7 Q33_A_OTHER Q34_A_Part_1 Q34_A_Part_2 Q34_A_Part_3 Q34_A_Part_4 Q34_A_Part_5 Q34_A_Part_6 Q34_A_Part_7 Q34_A_Part_8 Q34_A_Part_9 Q34_A_Part_10 Q34_A_Part_11 Q34_A_OTHER Q35_A_Part_1 Q35_A_Part_2 Q35_A_Part_3 Q35_A_Part_4 Q35_A_Part_5 Q35_A_Part_6 Q35_A_Part_7 Q35_A_Part_8 Q35_A_Part_9 Q35_A_Part_10 Q35_A_OTHER Q36_Part_1 Q36_Part_2 Q36_Part_3 Q36_Part_4 Q36_Part_5 Q36_Part_6 Q36_Part_7 Q36_Part_8 Q36_Part_9 Q36_OTHER Q37_Part_1 Q37_Part_2 Q37_Part_3 Q37_Part_4 Q37_Part_5 Q37_Part_6 Q37_Part_7 Q37_Part_8 Q37_Part_9 Q37_Part_10 Q37_Part_11 Q37_OTHER Q38 Q39_Part_1 Q39_Part_2 Q39_Part_3 Q39_Part_4 Q39_Part_5 Q39_Part_6 Q39_Part_7 Q39_Part_8 Q39_Part_9 Q39_Part_10 Q39_Part_11 Q39_OTHER Q26_B_Part_1 Q26_B_Part_2 Q26_B_Part_3 Q26_B_Part_4 Q26_B_Part_5 Q26_B_Part_6 Q26_B_Part_7 Q26_B_Part_8 Q26_B_Part_9 Q26_B_Part_10 Q26_B_Part_11 Q26_B_OTHER Q27_B_Part_1 Q27_B_Part_2 Q27_B_Part_3 Q27_B_Part_4 Q27_B_Part_5 Q27_B_Part_6 Q27_B_Part_7 Q27_B_Part_8 Q27_B_Part_9 Q27_B_Part_10 Q27_B_Part_11 Q27_B_OTHER Q28_B_Part_1 Q28_B_Part_2 Q28_B_Part_3 Q28_B_Part_4 Q28_B_Part_5 Q28_B_Part_6 Q28_B_Part_7 Q28_B_Part_8 Q28_B_Part_9 Q28_B_Part_10 Q28_B_OTHER Q29_B_Part_1 Q29_B_Part_2 Q29_B_Part_3 Q29_B_Part_4 Q29_B_Part_5 Q29_B_Part_6 Q29_B_Part_7 Q29_B_Part_8 Q29_B_Part_9 Q29_B_Part_10 Q29_B_Part_11 Q29_B_Part_12 Q29_B_Part_13 Q29_B_Part_14 Q29_B_Part_15 Q29_B_Part_16 Q29_B_Part_17 Q29_B_OTHER Q31_B_Part_1 Q31_B_Part_2 Q31_B_Part_3 Q31_B_Part_4 Q31_B_Part_5 Q31_B_Part_6 Q31_B_Part_7 Q31_B_Part_8 Q31_B_Part_9 Q31_B_Part_10 Q31_B_Part_11 Q31_B_Part_12 Q31_B_Part_13 Q31_B_Part_14 Q31_B_OTHER Q33_B_Part_1 Q33_B_Part_2 Q33_B_Part_3 Q33_B_Part_4 Q33_B_Part_5 Q33_B_Part_6 Q33_B_Part_7 Q33_B_OTHER Q34_B_Part_1 Q34_B_Part_2 Q34_B_Part_3 Q34_B_Part_4 Q34_B_Part_5 Q34_B_Part_6 Q34_B_Part_7 Q34_B_Part_8 Q34_B_Part_9 Q34_B_Part_10 Q34_B_Part_11 Q34_B_OTHER Q35_B_Part_1 Q35_B_Part_2 Q35_B_Part_3 Q35_B_Part_4 Q35_B_Part_5 Q35_B_Part_6 Q35_B_Part_7 Q35_B_Part_8 Q35_B_Part_9 Q35_B_Part_10 Q35_B_OTHER . 1 1838 | 35-39 | Man | Colombia | Doctoral degree | Student | 5-10 years | Python | R | SQL | C | NaN | NaN | Javascript | NaN | NaN | NaN | MATLAB | NaN | Other | Python | Jupyter (JupyterLab, Jupyter Notebooks, etc) | NaN | NaN | Visual Studio Code (VSCode) | NaN | Spyder | NaN | NaN | NaN | NaN | NaN | NaN | Kaggle Notebooks | Colab Notebooks | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | A cloud computing platform (AWS, Azure, GCP, h... | GPUs | NaN | NaN | NaN | 2-5 times | Matplotlib | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Geoplotlib | NaN | NaN | NaN | 1-2 years | NaN | TensorFlow | Keras | NaN | NaN | NaN | Xgboost | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Decision Trees or Random Forests | Gradient Boosting Machines (xgboost, lightgbm,... | Bayesian Approaches | NaN | Dense Neural Networks (MLPs, etc) | Convolutional Neural Networks | NaN | Recurrent Neural Networks | NaN | NaN | NaN | NaN | NaN | NaN | Image classification and other general purpose... | NaN | NaN | NaN | Word embeddings/vectors (GLoVe, fastText, word... | NaN | Contextualized embeddings (ELMo, CoVe) | Transformer language models (GPT-3, BERT, XLne... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | NaN | Kaggle Learn Courses | NaN | NaN | NaN | NaN | NaN | NaN | University Courses (resulting in a university ... | NaN | NaN | Basic statistical software (Microsoft Excel, G... | NaN | NaN | NaN | Kaggle (notebooks, forums, etc) | NaN | NaN | NaN | NaN | Journal Publications (peer-reviewed journals, ... | NaN | NaN | NaN | Amazon Web Services (AWS) | Microsoft Azure | Google Cloud Platform (GCP) | IBM Cloud / Red Hat | NaN | SAP Cloud | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Azure Cloud Services | Microsoft Azure Container Instances | Azure Functions | Google Cloud Compute Engine | Google Cloud Functions | Google Cloud Run | Google Cloud App Engine | NaN | NaN | Amazon SageMaker | Amazon Forecast | Amazon Rekognition | Azure Machine Learning Studio | Azure Cognitive Services | Google Cloud AI Platform / Google Cloud ML En... | Google Cloud Video AI | Google Cloud Natural Language | Google Cloud Vision AI | NaN | NaN | NaN | NaN | NaN | NaN | MongoDB | NaN | NaN | Microsoft SQL Server | NaN | NaN | NaN | NaN | NaN | Google Cloud BigQuery | Google Cloud SQL | Google Cloud Firestore | NaN | NaN | Microsoft Power BI | Amazon QuickSight | Google Data Studio | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | SAP Analytics Cloud | NaN | NaN | Automated data augmentation (e.g. imgaug, albu... | NaN | NaN | NaN | Automated hyperparameter tuning (e.g. hyperopt... | Automation of full ML pipelines (e.g. Google C... | NaN | NaN | Google Cloud AutoML | NaN | Databricks AutoML | NaN | NaN | Auto-Keras | Auto-Sklearn | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | TensorBoard | NaN | NaN | NaN | NaN | NaN | NaN | . 2 289287 | 30-34 | Man | United States of America | Master’s degree | Data Engineer | 5-10 years | Python | R | SQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Python | NaN | NaN | Visual Studio | NaN | PyCharm | NaN | NaN | Sublime Text | NaN | NaN | NaN | NaN | NaN | Colab Notebooks | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | A personal computer or laptop | GPUs | NaN | NaN | NaN | 2-5 times | Matplotlib | Seaborn | NaN | Ggplot / ggplot2 | Shiny | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 1-2 years | Scikit-learn | TensorFlow | Keras | PyTorch | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Linear or Logistic Regression | NaN | NaN | NaN | NaN | NaN | Convolutional Neural Networks | NaN | NaN | Transformer Networks (BERT, gpt-3, etc) | NaN | NaN | NaN | Image segmentation methods (U-Net, Mask R-CNN,... | NaN | Image classification and other general purpose... | NaN | NaN | NaN | NaN | NaN | Contextualized embeddings (ELMo, CoVe) | Transformer language models (GPT-3, BERT, XLne... | NaN | NaN | 10,000 or more employees | 20+ | We have well established ML methods (i.e., mod... | Analyze and understand data to influence produ... | NaN | NaN | NaN | NaN | Do research that advances the state of the art... | NaN | NaN | 100,000-124,999 | $100,000 or more ($USD) | Amazon Web Services (AWS) | Microsoft Azure | Google Cloud Platform (GCP) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon EC2 | AWS Lambda | NaN | NaN | NaN | Azure Functions | Google Cloud Compute Engine | NaN | NaN | NaN | NaN | NaN | Amazon SageMaker | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | PostgresSQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon Redshift | Amazon Athena | NaN | NaN | NaN | NaN | NaN | NaN | PostgresSQL | Amazon QuickSight | Microsoft Power BI | NaN | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Microsoft Power BI | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | GitHub | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | NaN | NaN | DataCamp | NaN | NaN | Udemy | NaN | NaN | NaN | NaN | NaN | Business intelligence software (Salesforce, Ta... | Twitter (data science influencers) | NaN | Reddit (r/machinelearning, etc) | Kaggle (notebooks, forums, etc) | Course Forums (forums.fast.ai, Coursera forums... | YouTube (Kaggle YouTube, Cloud AI Adventures, ... | NaN | Blogs (Towards Data Science, Analytics Vidhya,... | NaN | Slack Communities (ods.ai, kagglenoobs, etc) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 3 860 | 35-39 | Man | Argentina | Bachelor’s degree | Software Engineer | 10-20 years | NaN | NaN | NaN | NaN | NaN | Java | Javascript | NaN | NaN | Bash | NaN | NaN | NaN | R | NaN | NaN | NaN | Visual Studio Code (VSCode) | NaN | NaN | Notepad++ | Sublime Text | Vim / Emacs | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | A personal computer or laptop | NaN | NaN | None | NaN | Never | NaN | NaN | NaN | NaN | NaN | D3 js | NaN | NaN | NaN | NaN | NaN | NaN | I do not use machine learning methods | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 1000-9,999 employees | 0 | No (we do not use ML methods) | NaN | NaN | NaN | NaN | NaN | NaN | None of these activities are an important part... | NaN | 15,000-19,999 | $0 ($USD) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Coursera | edX | NaN | NaN | NaN | Udacity | Udemy | NaN | NaN | NaN | NaN | NaN | Basic statistical software (Microsoft Excel, G... | NaN | Email newsletters (Data Elixir, O&#39;Reilly Data ... | NaN | Kaggle (notebooks, forums, etc) | NaN | YouTube (Kaggle YouTube, Cloud AI Adventures, ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | Microsoft SQL Server | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | . 4 507 | 30-34 | Man | United States of America | Master’s degree | Data Scientist | 5-10 years | Python | NaN | SQL | NaN | NaN | NaN | NaN | NaN | NaN | Bash | NaN | NaN | NaN | Python | NaN | NaN | NaN | NaN | PyCharm | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | A cloud computing platform (AWS, Azure, GCP, h... | NaN | NaN | None | NaN | 2-5 times | Matplotlib | Seaborn | Plotly / Plotly Express | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 3-4 years | Scikit-learn | TensorFlow | Keras | NaN | NaN | NaN | Xgboost | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Linear or Logistic Regression | Decision Trees or Random Forests | Gradient Boosting Machines (xgboost, lightgbm,... | Bayesian Approaches | NaN | Dense Neural Networks (MLPs, etc) | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 250-999 employees | 5-9 | We have well established ML methods (i.e., mod... | Analyze and understand data to influence produ... | NaN | NaN | Build and/or run a machine learning service th... | Experimentation and iteration to improve exist... | NaN | NaN | NaN | 125,000-149,999 | $10,000-$99,999 | Amazon Web Services (AWS) | NaN | NaN | NaN | NaN | NaN | Salesforce Cloud | NaN | NaN | NaN | NaN | NaN | Amazon EC2 | AWS Lambda | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | MySQL | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Amazon Redshift | NaN | NaN | NaN | NaN | NaN | NaN | NaN | MySQL | NaN | NaN | NaN | NaN | Tableau | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | No / None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | I do not share my work publicly | NaN | Coursera | NaN | NaN | DataCamp | NaN | NaN | NaN | LinkedIn Learning | NaN | University Courses (resulting in a university ... | NaN | NaN | Local development environments (RStudio, Jupyt... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | None | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 5 78 | 30-34 | Man | Japan | Master’s degree | Software Engineer | 3-5 years | Python | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | Python | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . Distribution of Age of Kagglers. . df[&#39;Q1&#39;].unique() . array([&#39;35-39&#39;, &#39;30-34&#39;, &#39;22-24&#39;, &#39;25-29&#39;, &#39;18-21&#39;, &#39;55-59&#39;, &#39;50-54&#39;, &#39;40-44&#39;, &#39;60-69&#39;, &#39;45-49&#39;, &#39;70+&#39;], dtype=object) . plt.figure(figsize = (20,7)) df[&#39;Q1&#39;].value_counts().sort_index().plot.bar(color = &#39;purple&#39;) plt.title(&#39;Age distribution of Kaggle Users that filled the survey&#39;) plt.xlabel(&#39;User ages&#39;) plt.ylabel(&#39;Count&#39;) plt.show() .",
            "url": "https://jithinharidas.github.io/paranormal-distributions/2021/04/27/Kaggle-Survey.html",
            "relUrl": "/2021/04/27/Kaggle-Survey.html",
            "date": " • Apr 27, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "IPL Analysis",
            "content": "import pandas as pd import numpy as np import seaborn as sns import matplotlib.pyplot as plt . df_ipl = pd.read_csv(&#39;C:/Users/sathyak/Desktop/ball-by-ball 2008-2020.csv&#39;) . df_ipl.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 0 | 335982 | 1 | 6 | 5 | RT Ponting | BB McCullum | AA Noffke | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 1 | 335982 | 1 | 6 | 6 | BB McCullum | RT Ponting | AA Noffke | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 2 | 335982 | 1 | 7 | 1 | BB McCullum | RT Ponting | Z Khan | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 3 | 335982 | 1 | 7 | 2 | BB McCullum | RT Ponting | Z Khan | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 4 | 335982 | 1 | 7 | 3 | RT Ponting | BB McCullum | Z Khan | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . df_ipl.tail() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 193463 | 1237181 | 1 | 12 | 5 | RR Pant | SS Iyer | NM Coulter-Nile | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193464 | 1237181 | 1 | 12 | 6 | RR Pant | SS Iyer | NM Coulter-Nile | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193465 | 1237181 | 1 | 13 | 1 | RR Pant | SS Iyer | KH Pandya | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Delhi Capitals | Mumbai Indians | . 193466 | 1237181 | 1 | 13 | 2 | RR Pant | SS Iyer | KH Pandya | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193467 | 1237181 | 1 | 13 | 3 | SS Iyer | RR Pant | KH Pandya | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . df_ipl.shape . (193468, 18) . df_ipl.groupby([&quot;batting_team&quot;])[&quot;total_runs&quot;].sum().sort_values(ascending = False) . batting_team Mumbai Indians 32286 Royal Challengers Bangalore 30214 Kings XI Punjab 30017 Kolkata Knight Riders 29383 Chennai Super Kings 28363 Rajasthan Royals 24507 Delhi Daredevils 24285 Sunrisers Hyderabad 19332 Deccan Chargers 11463 Pune Warriors 6358 Delhi Capitals 5296 Gujarat Lions 4856 Rising Pune Supergiant 2470 Rising Pune Supergiants 2063 Kochi Tuskers Kerala 1901 Name: total_runs, dtype: int64 . df_kkr = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Kolkata Knight Riders&#39;] . df_kkr.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 0 | 335982 | 1 | 6 | 5 | RT Ponting | BB McCullum | AA Noffke | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 1 | 335982 | 1 | 6 | 6 | BB McCullum | RT Ponting | AA Noffke | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 2 | 335982 | 1 | 7 | 1 | BB McCullum | RT Ponting | Z Khan | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 3 | 335982 | 1 | 7 | 2 | BB McCullum | RT Ponting | Z Khan | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . 4 | 335982 | 1 | 7 | 3 | RT Ponting | BB McCullum | Z Khan | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Royal Challengers Bangalore | . df_kkr.tail() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 191905 | 1216545 | 2 | 17 | 3 | Shubman Gill | EJG Morgan | T Natarajan | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Sunrisers Hyderabad | . 191906 | 1216545 | 2 | 17 | 4 | Shubman Gill | EJG Morgan | T Natarajan | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Kolkata Knight Riders | Sunrisers Hyderabad | . 191907 | 1216545 | 2 | 17 | 5 | Shubman Gill | EJG Morgan | T Natarajan | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Sunrisers Hyderabad | . 191908 | 1216545 | 2 | 17 | 6 | EJG Morgan | Shubman Gill | T Natarajan | 6 | 0 | 6 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Sunrisers Hyderabad | . 191909 | 1216545 | 2 | 17 | 7 | EJG Morgan | Shubman Gill | T Natarajan | 4 | 0 | 4 | 0 | 0 | NaN | NaN | NaN | NaN | Kolkata Knight Riders | Sunrisers Hyderabad | . df_kkr.shape . (22554, 18) . kkr_totalruns = df_kkr[&#39;total_runs&#39;].sum() . kkr_totalruns . 29383 . kkr_batsman = pd.DataFrame((df_kkr.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/kkr_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . kkr_batsman . batsman_runs . batsman . G Gambhir | 10.329102 | . RV Uthappa | 8.300718 | . YK Pathan | 6.442501 | . AD Russell | 4.965456 | . JH Kallis | 4.407310 | . ... | ... | . SE Bond | 0.003403 | . HF Gurney | 0.003403 | . CK Langeveldt | 0.000000 | . Y Prithvi Raj | 0.000000 | . JL Denly | 0.000000 | . 101 rows × 1 columns . kkr_runs1=kkr_batsman[:14].copy() . kkr_runs1.reset_index(level=0, inplace=True) . kkr_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[kkr_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . kkr_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_kkr[&#39;total_runs&#39;] - df_kkr[&#39;batsman_runs&#39;]).sum()/kkr_totalruns)*100}) . kkr_runs3 . batsman batsman_runs . 0 | Extras | 5.503182 | . kkr_runs1.head() . batsman batsman_runs . 0 | G Gambhir | 10.329102 | . 1 | RV Uthappa | 8.300718 | . 2 | YK Pathan | 6.442501 | . 3 | AD Russell | 4.965456 | . 4 | JH Kallis | 4.407310 | . kkr_runs2 . batsman batsman_runs . 0 | Others | 28.707076 | . kkr=pd.concat([kkr_runs1,kkr_runs2,kkr_runs3]) . kkr.head() . batsman batsman_runs . 0 | G Gambhir | 10.329102 | . 1 | RV Uthappa | 8.300718 | . 2 | YK Pathan | 6.442501 | . 3 | AD Russell | 4.965456 | . 4 | JH Kallis | 4.407310 | . kkr.tail() . batsman batsman_runs . 11 | KD Karthik | 3.131062 | . 12 | SP Narine | 3.035769 | . 13 | BB McCullum | 3.001736 | . 0 | Others | 28.707076 | . 0 | Extras | 5.503182 | . kkr.shape . (16, 2) . kkr=kkr.set_index(&#39;batsman&#39;) . kkr.head() . batsman_runs . batsman . G Gambhir | 10.329102 | . RV Uthappa | 8.300718 | . YK Pathan | 6.442501 | . AD Russell | 4.965456 | . JH Kallis | 4.407310 | . kkr.tail() . batsman_runs . batsman . KD Karthik | 3.131062 | . SP Narine | 3.035769 | . BB McCullum | 3.001736 | . Others | 28.707076 | . Extras | 5.503182 | . kkr . batsman_runs . batsman . G Gambhir | 10.329102 | . RV Uthappa | 8.300718 | . YK Pathan | 6.442501 | . AD Russell | 4.965456 | . JH Kallis | 4.407310 | . CA Lynn | 4.335840 | . MK Pandey | 4.322227 | . SC Ganguly | 3.508832 | . MK Tiwary | 3.410135 | . N Rana | 3.403328 | . Shubman Gill | 3.195725 | . KD Karthik | 3.131062 | . SP Narine | 3.035769 | . BB McCullum | 3.001736 | . Others | 28.707076 | . Extras | 5.503182 | . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] kkr.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show() . df_rr = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Rajasthan Royals&#39;] . df_rr.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 473 | 335984 | 1 | 0 | 2 | T Kohli | YK Pathan | GD McGrath | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Rajasthan Royals | Delhi Daredevils | . 474 | 335984 | 1 | 0 | 3 | T Kohli | YK Pathan | GD McGrath | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Rajasthan Royals | Delhi Daredevils | . 475 | 335984 | 1 | 0 | 4 | T Kohli | YK Pathan | GD McGrath | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Rajasthan Royals | Delhi Daredevils | . 476 | 335984 | 1 | 0 | 6 | T Kohli | YK Pathan | GD McGrath | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Rajasthan Royals | Delhi Daredevils | . 477 | 335984 | 1 | 0 | 7 | T Kohli | YK Pathan | GD McGrath | 6 | 0 | 6 | 0 | 0 | NaN | NaN | NaN | NaN | Rajasthan Royals | Delhi Daredevils | . rr_totalruns = df_rr[&#39;total_runs&#39;].sum() . rr_totalruns . 24507 . rr_batsman = pd.DataFrame((df_rr.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/rr_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . rr_batsman . batsman_runs . batsman . AM Rahane | 11.466112 | . SR Watson | 9.678867 | . SV Samson | 7.781450 | . R Dravid | 5.206676 | . JC Buttler | 4.843514 | . ... | ... | . J Theron | 0.004080 | . R Shukla | 0.004080 | . KW Richardson | 0.004080 | . ND Doshi | 0.000000 | . JDP Oram | 0.000000 | . 105 rows × 1 columns . rr_runs1=rr_batsman[:14].copy() . rr_runs1.reset_index(level=0, inplace=True) . rr_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[rr_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . rr_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_rr[&#39;total_runs&#39;] - df_rr[&#39;batsman_runs&#39;]).sum()/rr_totalruns)*100}) . rr_runs1.head() . batsman batsman_runs . 0 | AM Rahane | 11.466112 | . 1 | SR Watson | 9.678867 | . 2 | SV Samson | 7.781450 | . 3 | R Dravid | 5.206676 | . 4 | JC Buttler | 4.843514 | . rr_runs2.head() . batsman batsman_runs . 0 | Others | 30.750398 | . rr=pd.concat([rr_runs1,rr_runs2,rr_runs3]) . rr.head() . batsman batsman_runs . 0 | AM Rahane | 11.466112 | . 1 | SR Watson | 9.678867 | . 2 | SV Samson | 7.781450 | . 3 | R Dravid | 5.206676 | . 4 | JC Buttler | 4.843514 | . rr.tail() . batsman batsman_runs . 11 | NV Ojha | 2.223854 | . 12 | KK Nair | 2.085119 | . 13 | RA Jadeja | 1.754601 | . 0 | Others | 30.750398 | . 0 | Extras | 4.819031 | . rr=rr.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] rr.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show() . df_csk = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Chennai Super Kings&#39;] . df_csk.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 227 | 335983 | 1 | 19 | 5 | MEK Hussey | S Badrinath | JR Hopes | 6 | 0 | 6 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Kings XI Punjab | . 228 | 335983 | 1 | 19 | 6 | MEK Hussey | S Badrinath | JR Hopes | 2 | 0 | 2 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Kings XI Punjab | . 242 | 335983 | 1 | 9 | 5 | MEK Hussey | SK Raina | K Goel | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Kings XI Punjab | . 243 | 335983 | 1 | 9 | 6 | MEK Hussey | SK Raina | K Goel | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Kings XI Punjab | . 244 | 335983 | 1 | 10 | 1 | MEK Hussey | SK Raina | PP Chawla | 6 | 0 | 6 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Kings XI Punjab | . df_csk.tail() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 191758 | 1216544 | 2 | 12 | 3 | RD Gaikwad | AT Rayudu | Washington Sundar | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Royal Challengers Bangalore | . 191759 | 1216544 | 2 | 12 | 4 | AT Rayudu | RD Gaikwad | Washington Sundar | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Royal Challengers Bangalore | . 191760 | 1216544 | 2 | 13 | 3 | AT Rayudu | RD Gaikwad | YS Chahal | 0 | 0 | 0 | 0 | 1 | bowled | AT Rayudu | NaN | NaN | Chennai Super Kings | Royal Challengers Bangalore | . 191761 | 1216544 | 2 | 13 | 1 | AT Rayudu | RD Gaikwad | YS Chahal | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Royal Challengers Bangalore | . 191762 | 1216544 | 2 | 13 | 2 | RD Gaikwad | AT Rayudu | YS Chahal | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Chennai Super Kings | Royal Challengers Bangalore | . csk_totalruns = df_csk[&#39;total_runs&#39;].sum() . csk_totalruns . 28363 . csk_batsman = pd.DataFrame((df_csk.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/csk_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . csk_batsman.head() . batsman_runs . batsman . SK Raina | 15.960935 | . MS Dhoni | 14.307372 | . F du Plessis | 7.361704 | . MEK Hussey | 6.233473 | . M Vijay | 6.021930 | . csk_runs1=csk_batsman[:14].copy() . csk_runs1.reset_index(level=0, inplace=True) . csk_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[csk_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . csk_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_csk[&#39;total_runs&#39;] - df_csk[&#39;batsman_runs&#39;]).sum()/csk_totalruns)*100}) . csk_runs1.head() . batsman batsman_runs . 0 | SK Raina | 15.960935 | . 1 | MS Dhoni | 14.307372 | . 2 | F du Plessis | 7.361704 | . 3 | MEK Hussey | 6.233473 | . 4 | M Vijay | 6.021930 | . csk_runs2.head() . batsman batsman_runs . 0 | Others | 10.919155 | . csk=pd.concat([csk_runs1,csk_runs2,csk_runs3]) . csk.head() . batsman batsman_runs . 0 | SK Raina | 15.960935 | . 1 | MS Dhoni | 14.307372 | . 2 | F du Plessis | 7.361704 | . 3 | MEK Hussey | 6.233473 | . 4 | M Vijay | 6.021930 | . csk.tail() . batsman batsman_runs . 11 | DJ Bravo | 3.293023 | . 12 | BB McCullum | 2.965131 | . 13 | JA Morkel | 2.915771 | . 0 | Others | 10.919155 | . 0 | Extras | 4.971265 | . csk=csk.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] csk.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show() . df_mi = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Mumbai Indians&#39;] . df_mi.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 692 | 335985 | 1 | 0 | 2 | L Ronchi | ST Jayasuriya | P Kumar | 4 | 0 | 4 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Royal Challengers Bangalore | . 693 | 335985 | 1 | 0 | 1 | L Ronchi | ST Jayasuriya | P Kumar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Royal Challengers Bangalore | . 694 | 335985 | 1 | 0 | 6 | L Ronchi | ST Jayasuriya | P Kumar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Royal Challengers Bangalore | . 695 | 335985 | 1 | 0 | 3 | L Ronchi | ST Jayasuriya | P Kumar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Royal Challengers Bangalore | . 696 | 335985 | 1 | 0 | 4 | L Ronchi | ST Jayasuriya | P Kumar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Royal Challengers Bangalore | . df_mi.tail() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 193372 | 1237181 | 2 | 17 | 6 | HH Pandya | Ishan Kishan | K Rabada | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Delhi Capitals | . 193373 | 1237181 | 2 | 18 | 1 | HH Pandya | Ishan Kishan | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Delhi Capitals | . 193374 | 1237181 | 2 | 18 | 2 | Ishan Kishan | HH Pandya | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Delhi Capitals | . 193375 | 1237181 | 2 | 18 | 3 | HH Pandya | Ishan Kishan | A Nortje | 0 | 0 | 0 | 0 | 1 | caught | HH Pandya | AM Rahane | NaN | Mumbai Indians | Delhi Capitals | . 193376 | 1237181 | 2 | 18 | 4 | KH Pandya | Ishan Kishan | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Mumbai Indians | Delhi Capitals | . mi_totalruns = df_mi[&#39;total_runs&#39;].sum() . mi_totalruns . 32286 . mi_batsman = pd.DataFrame((df_mi.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/mi_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . mi_batsman.head(10) . batsman_runs . batsman . RG Sharma | 12.575110 | . KA Pollard | 9.363191 | . AT Rayudu | 7.483120 | . SR Tendulkar | 7.229140 | . SA Yadav | 4.385802 | . HH Pandya | 4.178282 | . LMP Simmons | 3.342006 | . Q de Kock | 3.196432 | . KH Pandya | 3.097318 | . PA Patel | 2.821656 | . mi_runs1=mi_batsman[:14].copy() . mi_runs1.reset_index(level=0, inplace=True) . mi_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[mi_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . mi_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_mi[&#39;total_runs&#39;] - df_mi[&#39;batsman_runs&#39;]).sum()/mi_totalruns)*100}) . mi_runs1.head() . batsman batsman_runs . 0 | RG Sharma | 12.575110 | . 1 | KA Pollard | 9.363191 | . 2 | AT Rayudu | 7.483120 | . 3 | SR Tendulkar | 7.229140 | . 4 | SA Yadav | 4.385802 | . mi_runs2.head() . batsman batsman_runs . 0 | Others | 27.008611 | . mi=pd.concat([mi_runs1,mi_runs2,mi_runs3]) . mi.tail() . batsman batsman_runs . 11 | Harbhajan Singh | 2.474757 | . 12 | ST Jayasuriya | 2.378740 | . 13 | KD Karthik | 2.316794 | . 0 | Others | 27.008611 | . 0 | Extras | 5.386236 | . mi=mi.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] mi.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show . &lt;function matplotlib.pyplot.show(*args, **kw)&gt; . df_rcb = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Royal Challengers Bangalore&#39;] . df_rcb.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 121 | 335982 | 2 | 6 | 2 | CL White | MV Boucher | AB Agarkar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Royal Challengers Bangalore | Kolkata Knight Riders | . 122 | 335982 | 2 | 6 | 3 | CL White | MV Boucher | AB Agarkar | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Royal Challengers Bangalore | Kolkata Knight Riders | . 123 | 335982 | 2 | 6 | 4 | MV Boucher | CL White | AB Agarkar | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Royal Challengers Bangalore | Kolkata Knight Riders | . 124 | 335982 | 2 | 6 | 5 | MV Boucher | CL White | AB Agarkar | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Royal Challengers Bangalore | Kolkata Knight Riders | . 125 | 335982 | 2 | 6 | 6 | MV Boucher | CL White | AB Agarkar | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Royal Challengers Bangalore | Kolkata Knight Riders | . df_rcb.shape . (22706, 18) . rcb_totalruns = df_rcb[&#39;total_runs&#39;].sum() . rcb_totalruns . 30214 . rcb_batsman = pd.DataFrame((df_rcb.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/rcb_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . rcb_batsman.head() . batsman_runs . batsman . V Kohli | 19.454557 | . AB de Villiers | 13.828027 | . CH Gayle | 10.468657 | . JH Kallis | 3.746608 | . R Dravid | 2.972132 | . rcb_runs1=rcb_batsman[:14].copy() . rcb_runs1.reset_index(level=0, inplace=True) . rcb_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[rcb_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . rcb_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_rcb[&#39;total_runs&#39;] - df_rcb[&#39;batsman_runs&#39;]).sum()/rcb_totalruns)*100}) . rcb=pd.concat([rcb_runs1,rcb_runs2,rcb_runs3]) . rcb.head() . batsman batsman_runs . 0 | V Kohli | 19.454557 | . 1 | AB de Villiers | 13.828027 | . 2 | CH Gayle | 10.468657 | . 3 | JH Kallis | 3.746608 | . 4 | R Dravid | 2.972132 | . rcb.tail() . batsman batsman_runs . 11 | D Padikkal | 1.565499 | . 12 | MA Agarwal | 1.433110 | . 13 | MK Pandey | 1.380155 | . 0 | Others | 28.797908 | . 0 | Extras | 4.875223 | . rcb=rcb.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] rcb.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show . &lt;function matplotlib.pyplot.show(*args, **kw)&gt; . df_kxip = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Kings XI Punjab&#39;] . df_kxip.head() . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 225 | 335983 | 2 | 0 | 1 | K Goel | JR Hopes | JDP Oram | 4 | 0 | 4 | 0 | 0 | NaN | NaN | NaN | NaN | Kings XI Punjab | Chennai Super Kings | . 226 | 335983 | 2 | 0 | 2 | K Goel | JR Hopes | JDP Oram | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Kings XI Punjab | Chennai Super Kings | . 229 | 335983 | 2 | 0 | 5 | JR Hopes | K Goel | JDP Oram | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Kings XI Punjab | Chennai Super Kings | . 230 | 335983 | 2 | 0 | 6 | JR Hopes | K Goel | JDP Oram | 4 | 0 | 4 | 0 | 0 | NaN | NaN | NaN | NaN | Kings XI Punjab | Chennai Super Kings | . 231 | 335983 | 2 | 1 | 1 | K Goel | JR Hopes | MS Gony | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Kings XI Punjab | Chennai Super Kings | . kxip_totalruns = df_kxip[&#39;total_runs&#39;].sum() . kxip_totalruns . 30017 . kxip_batsman = pd.DataFrame((df_kxip.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/kxip_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . kxip_batsman.head() . batsman_runs . batsman . SE Marsh | 8.251991 | . KL Rahul | 6.403038 | . DA Miller | 6.163174 | . GJ Maxwell | 4.310890 | . CH Gayle | 3.817837 | . kxip_runs1=kxip_batsman[:14].copy() . kxip_runs1.reset_index(level=0, inplace=True) . kxip_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[kxip_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . kxip_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_kxip[&#39;total_runs&#39;] - df_kxip[&#39;batsman_runs&#39;]).sum()/kxip_totalruns)*100}) . kxip=pd.concat([kxip_runs1,kxip_runs2,kxip_runs3]) . kxip.tail() . batsman batsman_runs . 11 | AC Gilchrist | 2.828397 | . 12 | DPMD Jayawardene | 2.788420 | . 13 | M Vijay | 2.345338 | . 0 | Others | 38.121731 | . 0 | Extras | 5.067129 | . kxip=kxip.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] kxip.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show . &lt;function matplotlib.pyplot.show(*args, **kw)&gt; . df_dc = df_ipl[df_ipl[&quot;batting_team&quot;]==&#39;Delhi Daredevils&#39;|&#39;Delhi Capitals&#39;] . File &#34;&lt;ipython-input-118-59bbe77cadbd&gt;&#34;, line 1 df_dc = df_ipl[df_ipl[&#34;batting_team&#34;]==&#39;Delhi Daredevils&#39;||&#39;Delhi Capitals&#39;] ^ SyntaxError: invalid syntax . df_dc = df_ipl[df_ipl[&#39;batting_team&#39;].isin([&#39;Delhi Daredevils&#39;, &#39;Delhi Capitals&#39;]) ] . df_dc . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 485 | 335984 | 2 | 8 | 4 | S Dhawan | G Gambhir | SK Warne | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Daredevils | Rajasthan Royals | . 486 | 335984 | 2 | 8 | 5 | S Dhawan | G Gambhir | SK Warne | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Daredevils | Rajasthan Royals | . 487 | 335984 | 2 | 8 | 6 | G Gambhir | S Dhawan | SK Warne | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Daredevils | Rajasthan Royals | . 488 | 335984 | 2 | 9 | 1 | G Gambhir | S Dhawan | YK Pathan | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Daredevils | Rajasthan Royals | . 489 | 335984 | 2 | 9 | 2 | G Gambhir | S Dhawan | YK Pathan | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Delhi Daredevils | Rajasthan Royals | . ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 193463 | 1237181 | 1 | 12 | 5 | RR Pant | SS Iyer | NM Coulter-Nile | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193464 | 1237181 | 1 | 12 | 6 | RR Pant | SS Iyer | NM Coulter-Nile | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193465 | 1237181 | 1 | 13 | 1 | RR Pant | SS Iyer | KH Pandya | 0 | 1 | 1 | 0 | 0 | NaN | NaN | NaN | wides | Delhi Capitals | Mumbai Indians | . 193466 | 1237181 | 1 | 13 | 2 | RR Pant | SS Iyer | KH Pandya | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 193467 | 1237181 | 1 | 13 | 3 | SS Iyer | RR Pant | KH Pandya | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Delhi Capitals | Mumbai Indians | . 22788 rows × 18 columns . dc_totalruns = df_dc[&#39;total_runs&#39;].sum() . dc_totalruns . 29581 . dc_batsman = pd.DataFrame((df_dc.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/dc_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . dc_batsman . batsman_runs . batsman . SS Iyer | 7.437206 | . V Sehwag | 7.349312 | . RR Pant | 7.028160 | . S Dhawan | 4.999831 | . DA Warner | 4.851087 | . ... | ... | . S Lamichhane | 0.000000 | . S Ladda | 0.000000 | . DR Sams | 0.000000 | . Sunny Gupta | 0.000000 | . AB Dinda | 0.000000 | . 117 rows × 1 columns . dc_runs1=dc_batsman[:14].copy() . dc_runs1.reset_index(level=0, inplace=True) . dc_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[dc_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . dc_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_dc[&#39;total_runs&#39;] - df_dc[&#39;batsman_runs&#39;]).sum()/dc_totalruns)*100}) . dc=pd.concat([dc_runs1,dc_runs2,dc_runs3]) . dc.head() . batsman batsman_runs . 0 | SS Iyer | 7.437206 | . 1 | V Sehwag | 7.349312 | . 2 | RR Pant | 7.028160 | . 3 | S Dhawan | 4.999831 | . 4 | DA Warner | 4.851087 | . dc=dc.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] dc.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show . &lt;function matplotlib.pyplot.show(*args, **kw)&gt; . df_ipl.groupby([&quot;batting_team&quot;])[&quot;total_runs&quot;].sum().sort_values(ascending = False) . batting_team Mumbai Indians 32286 Royal Challengers Bangalore 30214 Kings XI Punjab 30017 Kolkata Knight Riders 29383 Chennai Super Kings 28363 Rajasthan Royals 24507 Delhi Daredevils 24285 Sunrisers Hyderabad 19332 Deccan Chargers 11463 Pune Warriors 6358 Delhi Capitals 5296 Gujarat Lions 4856 Rising Pune Supergiant 2470 Rising Pune Supergiants 2063 Kochi Tuskers Kerala 1901 Name: total_runs, dtype: int64 . df_srh = df_ipl[df_ipl[&#39;batting_team&#39;].isin([&#39;Sunrisers Hyderabad&#39;, &#39;Deccan Chargers&#39;]) ] . df_srh . id inning over ball batsman non_striker bowler batsman_runs extra_runs total_runs non_boundary is_wicket dismissal_kind player_dismissed fielder extras_type batting_team bowling_team . 970 | 335986 | 1 | 12 | 1 | AS Yadav | A Symonds | DJ Hussey | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Deccan Chargers | Kolkata Knight Riders | . 971 | 335986 | 1 | 12 | 2 | A Symonds | AS Yadav | DJ Hussey | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Deccan Chargers | Kolkata Knight Riders | . 972 | 335986 | 1 | 12 | 3 | AS Yadav | A Symonds | DJ Hussey | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Deccan Chargers | Kolkata Knight Riders | . 973 | 335986 | 1 | 12 | 4 | AS Yadav | A Symonds | DJ Hussey | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Deccan Chargers | Kolkata Knight Riders | . 974 | 335986 | 1 | 12 | 5 | A Symonds | AS Yadav | DJ Hussey | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Deccan Chargers | Kolkata Knight Riders | . ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 193228 | 1237180 | 2 | 18 | 7 | S Nadeem | Sandeep Sharma | K Rabada | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Sunrisers Hyderabad | Delhi Capitals | . 193229 | 1237180 | 2 | 19 | 5 | Sandeep Sharma | S Nadeem | A Nortje | 0 | 0 | 0 | 0 | 0 | NaN | NaN | NaN | NaN | Sunrisers Hyderabad | Delhi Capitals | . 193230 | 1237180 | 2 | 19 | 2 | S Nadeem | Sandeep Sharma | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Sunrisers Hyderabad | Delhi Capitals | . 193231 | 1237180 | 2 | 19 | 3 | Sandeep Sharma | S Nadeem | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Sunrisers Hyderabad | Delhi Capitals | . 193232 | 1237180 | 2 | 19 | 4 | S Nadeem | Sandeep Sharma | A Nortje | 1 | 0 | 1 | 0 | 0 | NaN | NaN | NaN | NaN | Sunrisers Hyderabad | Delhi Capitals | . 23860 rows × 18 columns . srh_totalruns = df_srh[&#39;total_runs&#39;].sum() . srh_batsman = pd.DataFrame((df_srh.groupby([&#39;batsman&#39;])[&#39;batsman_runs&#39;].sum()/srh_totalruns)*100).sort_values(by=&#39;batsman_runs&#39;,ascending=False) . srh_batsman . batsman_runs . batsman . DA Warner | 12.401364 | . S Dhawan | 11.323267 | . KS Williamson | 5.257347 | . AC Gilchrist | 3.961682 | . RG Sharma | 3.799318 | . ... | ... | . KK Ahmed | 0.000000 | . Harmeet Singh | 0.000000 | . V Pratap Singh | 0.000000 | . MJ Lumb | 0.000000 | . CJ Jordan | 0.000000 | . 109 rows × 1 columns . srh_runs1=srh_batsman[:14].copy() . srh_runs1.reset_index(level=0, inplace=True) . srh_runs2=pd.DataFrame(data={&#39;batsman&#39;:[&#39;Others&#39;],&#39;batsman_runs&#39;:[srh_batsman[&#39;batsman_runs&#39;][14:].sum()]}) . srh_runs3 = pd.DataFrame(data={&#39;batsman&#39;:[&#39;Extras&#39;],&#39;batsman_runs&#39;:((df_srh[&#39;total_runs&#39;] - df_srh[&#39;batsman_runs&#39;]).sum()/srh_totalruns)*100}) . srh=pd.concat([srh_runs1,srh_runs2,srh_runs3]) . srh=srh.set_index(&#39;batsman&#39;) . wp = { &#39;linewidth&#39; : 2, &#39;edgecolor&#39; : &quot;white&quot; } colors = [&#39;#9e8600&#39;,&#39;#a38b00&#39;,&#39;#a88f00&#39;,&#39;#b39800&#39;,&#39;#b89c00&#39;,&#39;#bda000&#39;,&#39;#c7a900&#39;,&#39;#ccad00&#39;,&#39;#d1b200&#39;,&#39;#dbba00&#39;,&#39;#e0bf00&#39;,&#39;#e6c300&#39;,&#39;#f0cc00&#39;,&#39;#f5d000&#39;,&#39;#947e00&#39;] srh.plot.pie(y=&#39;batsman_runs&#39;,wedgeprops = wp,figsize=(15,15), startangle = 90,colors = colors, textprops = dict(color =&quot;Black&quot;),autopct=&#39;%1.1f%%&#39;) plt.tight_layout() plt.show . &lt;function matplotlib.pyplot.show(*args, **kw)&gt; .",
            "url": "https://jithinharidas.github.io/paranormal-distributions/2021/04/27/IPL-Analysis.html",
            "relUrl": "/2021/04/27/IPL-Analysis.html",
            "date": " • Apr 27, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Jithin K Haridas . . I specialise in Advanced Analytics, a combination of exploratory data analysis, prescriptive and predictive analytics leveraging techniques across areas like statistical modelling, data mining, machine learning, text analytics. . .",
          "url": "https://jithinharidas.github.io/paranormal-distributions/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jithinharidas.github.io/paranormal-distributions/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}